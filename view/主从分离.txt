主从分离(主写从读,然后从库读取主库数据,实现数据同步一致)
为什么要主从分离?
主写会影响到从库的读. 写操作会锁表,会影响从库的读. 主从分离好处就是写操作的锁不会影响从库的读.那么所有的读操作就从从库走,就不存在影响


此外,主从分离也暗示着备份的意思.也可以一主多从备份---读多写少

如果读少写多,解决问题?
垂直分表, 将写的多的表拆分出来. 进行分库分表(有集群--分片的意思),同步写变异步写.

主从分离,通过配置mysql即可完成主从的复制备份.那么如何实现动态数据源呢?
用spring aop思想, 在到达service之前进行拦截,增强.

